name: RDP
on:
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 9999
    steps:
    - name: Download Ngrok
      run: |
        Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

    - name: Extract Ngrok File
      run: Expand-Archive ngrok.zip

    - name: Connect Ngrok
      run: .\ngrok\ngrok.exe config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}

    - name: Windows10 RDP and Initial Setup
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server'-name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        del -Force "C:\Users\Public\Desktop\Epic Games Launcher.lnk" *> out.txt 2>&1
        del -Force "C:\Users\Public\Desktop\R 4.4.1.lnk" *> out.txt 2>&1
        del -Force "C:\Users\Public\Desktop\Unity Hub.lnk" *> out.txt 2>&1 
        net config server /srvcomment:"Windows Server 2019 By lucifer" > out.txt 2>&1
        REG ADD "HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer" /V EnableAutoTray /T REG_DWORD /D 0 /F > out.txt 2>&1
        net user lucifer JohnCena?6969 /add >nul
        net localgroup administrators lucifer /add >nul
        net user lucifer /active:yes >nul
        net user installer /delete
        diskperf -Y >nul
        sc config Audiosrv start= auto >nul
        sc start audiosrv >nul
        ICACLS C:\Windows\Temp /grant lucifer:F >nul
        ICACLS C:\Windows\installer /grant lucifer:F >nul
        echo "Successfully installed! If RDP is dead, rebuild again."
        ping -n 10 127.0.0.1 >nul

    - name: Tunnel and RDP Loop
      run: |
        Start-Process Powershell -ArgumentList '-Noexit -Command ".\ngrok\ngrok.exe tcp --region in 3389"'
        echo "RDP CREATION SUCCESSFULL!" 
        Start-Sleep -Seconds 10
        try {
            $ngrokProcess = Get-Process ngrok -ErrorAction SilentlyContinue
            $ngrokApiAccessible = Test-NetConnection -ComputerName localhost -Port 4040 -InformationLevel Quiet
    
            if ($ngrokProcess -and $ngrokApiAccessible) {
                $response = Invoke-WebRequest -Uri "http://localhost:4040/api/tunnels" -ErrorAction Stop
                $publicUrl = ($response | ConvertFrom-Json).tunnels[0].public_url
                echo "NGROK Public URL: $publicUrl"
                echo "Username: lucifer"
                echo "Password: JohnCena?6969"
                echo "You can login now"
            } else {
                Write-Error "NGROK tunnel not found. Make sure NGROK_AUTH_TOKEN is correct and the previous VM is not running. Check https://dashboard.ngrok.com/cloud-edge/endpoints for more details." 
            }
        } catch {
            Write-Error "An error occurred while checking the NGROK tunnel: $($_.Exception.Message)"
        }
    
        $endTime = (Get-Date).AddHours(6)
        while ((Get-Date) -lt $endTime) {
            Start-Sleep -Seconds 1
        }
